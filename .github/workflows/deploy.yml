name: Deploy to AWS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up AWS CLI
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y jq

    - name: Deploy to AWS
      env:
        DOMAIN: snaaakeattack.com
      run: |
        #!/bin/bash

        # Create S3 bucket
        BUCKET_NAME="${DOMAIN}-$(date +%s)"
        aws s3api create-bucket --bucket "${BUCKET_NAME}" --region us-east-1

        # Enable static website hosting
        aws s3api put-bucket-website \
          --bucket "${BUCKET_NAME}" \
          --website-configuration '{"IndexDocument": {"Suffix": "index.html"}}'

        # Update S3 bucket policy to allow public read access
        BUCKET_POLICY=$(cat <<EOF
        {
          "CallerReference": "$(date +%s)",
          "Aliases": {
            "Quantity": 1,
            "Items": [
              "${DOMAIN}"
            ]
          },
          "DefaultRootObject": "index.html",
          "Origins": {
            "Quantity": 1,
            "Items": [
              {
                "Id": "S3-${BUCKET_NAME}",
                "DomainName": "${BUCKET_NAME}.s3.amazonaws.com",
                "S3OriginConfig": {
                  "OriginAccessIdentity": ""
                }
              }
            ]
          },
          "DefaultCacheBehavior": {
            "TargetOriginId": "S3-${BUCKET_NAME}",
            "ForwardedValues": {
              "QueryString": false,
              "Cookies": {
                "Forward": "none"
              }
            },
            "TrustedSigners": {
              "Enabled": false,
              "Quantity": 0
            },
            "ViewerProtocolPolicy": "redirect-to-https",
            "MinTTL": 0,
            "MaxTTL": 31536000,
            "DefaultTTL": 86400,
            "AllowedMethods": {
              "Quantity": 2,
              "Items": [
                "GET",
                "HEAD"
              ],
              "CachedMethods": {
                "Quantity": 2,
                "Items": [
                  "GET",
                  "HEAD"
                ]
              }
            },
            "SmoothStreaming": false,
            "Compress": true
          },
          "PriceClass": "PriceClass_100",
          "Enabled": true,
          "ViewerCertificate": {
            "CloudFrontDefaultCertificate": true,
            "MinimumProtocolVersion": "TLSv1"
          },
          "Logging": {
            "Enabled": true,
            "IncludeCookies": false,
            "Bucket": "${LOG_BUCKET_NAME}.s3.amazonaws.com",
            "Prefix": "logs/"
          },
          "IsIPV6Enabled": true
        }
        EOF
        )

        DISTRIBUTION=$(aws cloudfront create-distribution \
          --distribution-config "${CLOUDFRONT_CONFIG}")
        DISTRIBUTION_ID=$(echo "${DISTRIBUTION}" | jq -r .Distribution.Id)

        # Wait for CloudFront distribution deployment to complete
        echo "Waiting for CloudFront distribution deployment to complete..."
        aws cloudfront wait distribution-deployed \
          --id "${DISTRIBUTION_ID}"

        # Sync files to S3 bucket
        aws s3 sync . "s3://${BUCKET_NAME}" \
          --exclude "*" \
          --include "index.html" \
          --include "logo.png" \
          --acl public-read

        # Print the CloudFront distribution domain name
        DISTRIBUTION_DOMAIN=$(echo "${DISTRIBUTION}" | jq -r .Distribution.DomainName)
        echo "Game deployed! Access it at http://${DISTRIBUTION_DOMAIN}"
